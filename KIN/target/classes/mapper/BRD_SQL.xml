<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="brd">
	<!-- 게시글 등록 -->
	<insert id="insert" parameterType="hashmap">
		<choose>
			<when test="cateNo eq 4">
				INSERT INTO CS(NO, U_NO, TITLE, CON, REG_DT, ATT_NM)
				VALUES(CS_SEQ.NEXTVAL, #{user_no}, #{title}, #{con}, SYSDATE, #{att_nm})
			</when>
			<otherwise>
				INSERT INTO BRD(NO, CT_NO, U_NO, TITLE, CON, REG_DT, ATT_NM)
				VALUES(BRD_SEQ.NEXTVAL, #{cateNo}, #{user_no}, #{title}, #{con}, SYSDATE, #{att_nm})
			</otherwise>
		</choose>
	</insert>
	
	<!-- 카테고리 동네라운지일때 글번호, 지역구 번호 -->
	<select id="getDis" parameterType="hashmap" resultType="hashmap">
		SELECT A.NO, A.DIS_NO
		FROM ( SELECT B.NO, UD.DIS_NO,
		               ROW_NUMBER() OVER(ORDER BY B.NO DESC) AS RNUM
		        FROM BRD B INNER JOIN U_DIS UD
		                           ON B.U_NO = UD.U_NO
		                   INNER JOIN CT
		                           ON B.CT_NO = CT.CT_NO
		        WHERE B.U_NO = #{user_no}
		        AND B.CT_NO = 2
		    ) A
		WHERE RNUM = 1
	</select>
	
	<!-- 카테고리 동네라운지일때 지역구 번호 -->
	<select id="getDisNo" parameterType="hashmap" resultType="String">
		SELECT DIS_NO
		FROM U_DIS
		WHERE U_NO = #{user_no}
	</select>
	
	<!-- 지역구 게시판에 데이터 존재 유무 -->
	<select id="disBrdYn" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM DIS_BRD
		WHERE DIS_NO = #{DIS_NO}
		AND NO = #{NO}
	</select>
	
	<!-- 카테고리 동네라운지일때 지역구 게시판 등록 -->
	<insert id="insertLounge" parameterType="hashmap">
		INSERT INTO DIS_BRD(DIS_NO, NO)
		VALUES (#{DIS_NO}, #{NO})
	</insert>
	
	<!-- 지역구 게시판 - 게시판 비교 -->
	<select id="getCha" parameterType="hashmap" resultType="hashmap">
		SELECT NO
		FROM DIS_BRD
		MINUS
		SELECT NO
		FROM BRD
		WHERE CT_NO = 2
		AND DEL_DT IS NULL
	</select>
	
	<!-- 카테고리 동네라운지일때 지역구 게시판 삭제 -->
	<delete id="deleteLounge" parameterType="hashmap">
		DELETE DIS_BRD
		WHERE NO IN (${NO})
	</delete>
	
	<!-- 게시글 수정 -->
	<update id="update" parameterType="hashmap">
		<choose>
			<when test="cateNo eq 4">
				UPDATE CS
				SET TITLE = #{title}, CON = #{con}, 
				    REG_DT = SYSDATE, ATT_NM = #{att_nm} 
				WHERE NO = #{no}
			</when>
			<otherwise>
				UPDATE BRD
				SET CT_NO = #{cateNo}, TITLE = #{title}, CON = #{con}, 
				    REG_DT = SYSDATE, ATT_NM = #{att_nm} 
				WHERE NO = #{no}
			</otherwise>
		</choose>
		
	</update>
	
	<!-- 게시글 삭제 -->
	<update id="delete" parameterType="hashmap">
		<choose>
			<when test="cateNo eq 4">
				UPDATE CS
				SET DEL_DT = SYSDATE
				WHERE NO = #{no}
			</when>
			<otherwise>
				UPDATE BRD
				SET DEL_DT = SYSDATE
				WHERE NO = #{no}
			</otherwise>
		</choose>
		
	</update>
	
	<!-- 게시판 데이터 수 -->
	<select id="getBrdCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM BRD B INNER JOIN U
		                   ON B.U_NO = U.U_NO
		<choose>
			<when test="cateNo eq 2">
				   INNER JOIN DIS_BRD D
				           ON B.NO = D.NO
				           <if test="admin != 0">
					          AND D.DIS_NO = #{dis_no}
				           </if>
		WHERE B.CT_NO = 2
			</when>
			<otherwise>
		WHERE B.CT_NO = #{cateNo}
			</otherwise>
		</choose>
		AND B.DEL_DT IS NULL
		AND U.DEL_DT IS NULL
		<if test="searchText != null and searchText != ''">
			<choose>
				<when test="searchGbn eq 0">
					AND ( UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
					      OR UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
					      OR UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%' )
				</when>
				<when test="searchGbn eq 1">
					AND UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
				</when>
				<when test="searchGbn eq 2">
					AND UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
				</when>
				<when test="searchGbn eq 3">
					AND UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%'
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 게시판 목록 -->
	<select id="getBrdList" parameterType="hashmap" resultType="hashmap">
		SELECT A.NO, A.TITLE, A.NICK, A.REG_DT, A.HIT, A.ATT_NM, A.U_NO
		FROM ( SELECT B.NO, B.TITLE, U.NICK, B.HIT, B.ATT_NM, B.U_NO,
		               CASE WHEN TO_CHAR(B.REG_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		                    THEN TO_CHAR(B.REG_DT, 'HH24:MI')
		                    ELSE TO_CHAR(B.REG_DT, 'YYYY-MM-DD')
		                END AS REG_DT,
		        ROW_NUMBER() OVER(ORDER BY B.NO DESC) AS RNUM
		        FROM BRD B INNER JOIN U
		                           ON B.U_NO = U.U_NO
		        <choose>
					<when test="cateNo eq 2">
						   INNER JOIN DIS_BRD D
						           ON B.NO = D.NO
						          <if test="admin != 0">
							          AND D.DIS_NO = #{dis_no}
						          </if>
				WHERE B.CT_NO = 2
					</when>
					<otherwise>
				WHERE B.CT_NO = #{cateNo}
					</otherwise>
				</choose>
		        AND B.DEL_DT IS NULL
		        AND U.DEL_DT IS NULL
		        <if test="searchText != null and searchText != ''">
					<choose>
						<when test="searchGbn eq 0">
							AND ( UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
							      OR UPPER (B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
							      OR UPPER (U.NICK) LIKE '%' || UPPER(#{searchText}) || '%' )
						</when>
						<when test="searchGbn eq 1">
							AND UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
						</when>
						<when test="searchGbn eq 2">
							AND UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
						</when>
						<when test="searchGbn eq 3">
							AND UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%'
						</when>
					</choose>
				</if>
		    ) A
		WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 게시글 상세 데이터-->
	<select id="getBrd" parameterType="hashmap" resultType="hashmap">
		SELECT B.NO, CT.CT_NM, B.U_NO, B.TITLE,
		       B.CON, U.NICK, B.HIT, B.ATT_NM,
		       CASE WHEN TO_CHAR(B.REG_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		            THEN TO_CHAR(B.REG_DT, 'HH24:MI')
		            ELSE TO_CHAR(B.REG_DT, 'YYYY-MM-DD')
		        END AS REG_DT
		FROM BRD B INNER JOIN U
		                   ON B.U_NO = U.U_NO
		           INNER JOIN CT
		                   ON B.CT_NO = CT.CT_NO
		WHERE B.NO = #{no}
	</select>
	
	<!-- 게시글 조회수 -->
	<update id="updateHit" parameterType="hashmap">
		UPDATE BRD
		SET HIT = HIT + 1
		WHERE NO = #{no}
	</update>
	
	<!-- 게시글 상세 페이지 댓글 조회-->
	<select id="getBrdCmt" parameterType="hashmap" resultType="hashmap">
		SELECT C.U_NO, C.CMT_NO, U.NICK, C.CON,
		       CASE WHEN TO_CHAR(C.REG_DT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE,  'YYYY-MM-DD')
		            THEN TO_CHAR(C.REG_DT, 'HH24:MI')
		            ELSE TO_CHAR(C.REG_DT, 'YYYY-MM-DD')
		        END AS REG_DT
		FROM CMT C INNER JOIN U
		                   ON C.U_NO = U.U_NO
		WHERE C.NO = #{no}
		AND C.DEL_DT IS NULL
		AND U.DEL_DT IS NULL
		ORDER BY C.CMT_NO ASC
	</select>
	
	<!-- 게시글 상세 페이지 댓글 등록 -->
	<insert id="insertCmt" parameterType="hashmap">
		INSERT INTO CMT(CMT_NO, U_NO, NO, CON, REG_DT)
		VALUES(CMT_SEQ.NEXTVAL, #{user_no}, #{brd_no}, #{insertCmt}, SYSDATE)
	</insert>
	
	<!-- 게시글 상세 페이지 댓글 수정 -->
	<update id="updateCmt" parameterType="hashmap">
		UPDATE CMT
		SET CON = #{insertCmt}, REG_DT = SYSDATE
		WHERE CMT_NO = #{cmt_no}
	</update>
	
	<!-- 게시글 상세 페이지 댓글 삭제 -->
	<update id="deleteCmt" parameterType="hashmap">
		UPDATE CMT
		SET DEL_DT = SYSDATE
		WHERE CMT_NO = #{cmt_no}
	</update>
	
	<!-- 메인화면 리스트 -->
	<!-- 동네라운지 -->
	<select id="getLounge" parameterType="hashmap" resultType="hashmap">
		SELECT A.NO, A.TITLE, A.CON, A.NICK, A.CT_NO
		FROM (SELECT B.NO, B.TITLE, B.CON, U.NICK, B.CT_NO,
		             ROW_NUMBER() OVER(ORDER BY B.NO DESC) AS RNUM
		      FROM BRD B INNER JOIN U U
		                         ON B.U_NO = U.U_NO
		                 INNER JOIN DIS_BRD D
		                         ON B.NO = D.NO
		                        <if test="admin != 0">
			                        AND D.DIS_NO = #{dis_no}
		                        </if>
		      WHERE CT_NO = 2
		      AND B.DEL_DT IS NULL
		      AND U.DEL_DT IS NULL
		      <if test="searchText != null and searchText != ''">
			  	<choose>
					<when test="searchGbn eq 0">
						AND ( UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (U.NICK) LIKE '%' || UPPER(#{searchText}) || '%' )
					</when>
					<when test="searchGbn eq 1">
						AND UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 2">
						AND UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 3">
						AND UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
				</choose>
			  </if>
		      ) A
		WHERE A.RNUM BETWEEN 1 AND 5
	</select>
	
	<!-- 유아교육 -->
	<select id="getEducate" parameterType="hashmap" resultType="hashmap">
		SELECT A.NO, A.TITLE, A.CON, A.NICK, A.CT_NO
		FROM (SELECT B.NO, B.TITLE, B.CON, U.NICK, B.CT_NO,
		             ROW_NUMBER() OVER(ORDER BY B.NO DESC) AS RNUM
		      FROM BRD B INNER JOIN U U
		                    ON B.U_NO = U.U_NO
		      WHERE CT_NO = 0
		      AND B.DEL_DT IS NULL
		      AND U.DEL_DT IS NULL
		      <if test="searchText != null and searchText != ''">
			  	<choose>
					<when test="searchGbn eq 0">
						AND ( UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (U.NICK) LIKE '%' || UPPER(#{searchText}) || '%' )
					</when>
					<when test="searchGbn eq 1">
						AND UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 2">
						AND UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 3">
						AND UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
				</choose>
			  </if>
		     ) A
		WHERE A.RNUM BETWEEN 1 AND 5
	</select>
	
	<!-- 문화생활 -->
	<select id="getCulture" parameterType="hashmap" resultType="hashmap">
		SELECT A.NO, A.TITLE, A.CON, A.NICK, A.CT_NO
		FROM (SELECT B.NO, B.TITLE, B.CON, U.NICK, B.CT_NO,
		             ROW_NUMBER() OVER(ORDER BY B.NO DESC) AS RNUM
		      FROM BRD B INNER JOIN U U
		                         ON B.U_NO = U.U_NO
		      WHERE CT_NO = 1
		      AND B.DEL_DT IS NULL
		      AND U.DEL_DT IS NULL
		      <if test="searchText != null and searchText != ''">
			  	<choose>
					<when test="searchGbn eq 0">
						AND ( UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (U.NICK) LIKE '%' || UPPER(#{searchText}) || '%' )
					</when>
					<when test="searchGbn eq 1">
						AND UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 2">
						AND UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 3">
						AND UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
				</choose>
			  </if>
		     ) A
		WHERE A.RNUM BETWEEN 1 AND 5
	</select>
	
	<!-- 궁금해요 -->
	<select id="getAsk" parameterType="hashmap" resultType="hashmap">
		SELECT A.NO, A.TITLE, A.CON, A.NICK, A.CT_NO
		FROM (SELECT B.NO, B.TITLE, B.CON, U.NICK, B.CT_NO,
		             ROW_NUMBER() OVER(ORDER BY B.NO DESC) AS RNUM
		      FROM BRD B INNER JOIN U U
		                         ON B.U_NO = U.U_NO
		      WHERE CT_NO = 3
		      AND B.DEL_DT IS NULL
		      AND U.DEL_DT IS NULL
		     <if test="searchText != null and searchText != ''">
			  	<choose>
					<when test="searchGbn eq 0">
						AND ( UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
						      OR UPPER (U.NICK) LIKE '%' || UPPER(#{searchText}) || '%' )
					</when>
					<when test="searchGbn eq 1">
						AND UPPER(B.TITLE) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 2">
						AND UPPER(B.CON) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
					<when test="searchGbn eq 3">
						AND UPPER(U.NICK) LIKE '%' || UPPER(#{searchText}) || '%'
					</when>
				</choose>
			  </if>
		     ) A
		WHERE A.RNUM BETWEEN 1 AND 5
	</select>
</mapper>